// These notes are from chapter 4 of 'Unix Systems Programming' book. 

Device Terminology: 
- device driver prevents unauthorized usage of the system. 

- there is a well defined interface for user programs to interact with these drivers by exposing them with special names /dev/xxx and then use these calls to interact with them: 
    open, close, read, write and ioctl. 

- block special devices are devices with characteristics similar to disks. 

- character special devices are devices with characteristics similar to char devices. 

Reading and Writing: 
- ssize_t read(int fileds, void* buff, int nbytes); 

    fileds (file descriptor to the device) 
    buff - should be initialized to the buffer array 
  
    if unsuccessful, returns -1 and sets errno. 
    
- There are always 3 open streams which have file descriptors associated with them, STDIN_FILENO, STDOUT_FILENO, STDERR_FILENO (standard error device). these file descriptors are maintained in the file desriptor table which is associated with any process. 

- a common mistake is not to allocate enough memory for buff when doing the read call. 

- ssize_t write(int fileds, const void* buff, size_t bytes); 
    
    fileds - file descriptor 
    buff - buffer 
    bytes - number of bytes to be written. 


