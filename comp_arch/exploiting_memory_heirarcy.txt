Notes from chapter 5 of "computer organization and architecture" 

- temporal locality: if an item has been referenced, then that its quite likely that the item would be referenced again. (location in memory, a specific file) etc. 

- spatial locality: if an item is referenced, then nearby items are likely to be referenced as well soon enough. (e.g. an array being accessed, instructions in a program executing sequentially). 

- memory heirarchy consists of multiple memories of different sizes and speeds. faster memories tend to be more expensive and hence smaller in size (e.g. L1 and L2 cache). 

- memory heirarcy is spread across multiple levels, but data is always transferred between adjacent two levels. (e.g. cache and main memory). The closer the level is to the processor, then faster it is, the further away the slower the access time. 

- the minimum unit of information that maybe present or not present in the heirarchy is a line/block. 

- if a data request from the processor in the upper level is succesful, its called a hit, otherwise a miss. In case of a miss the lower level of the memory heirarchy is accessed to get the access to the data. The hit rate is the fraction of memory accesses not found in the upper level. 

- how do we know if a data item is in the cache? if so, how do we find it? 

- directly mapped caches are where every memory location maps only to single location in the cache.     BlockAddress modulo (number of blocks in the cache)

- since multiple locations are mapped to the same location in cache, there should be a way to differentiate and find if a physical address is in the cache. This is done using tags which generally hold the upper bits of the address to map. Since the lower bits are already ored to get the block number, they are ignored. 

- generally a valid bit is associated with the cache entries to indicate if the data in the location is valid or not.  

